#!/usr/bin/env ruby

PHRASES = [
    "house that Jack built",
    "malt that lay in",
    "rat that ate",
    "cat that killed",
    "dog that worried",
    "cow with the crumpled horn that tossed",
    "maiden all forlorn that milked",
    "man all tattered and torn that kissed",
    "priest all shaven and shorn that married",
    "rooster that crowed in the morn that woke",
    "farmer sowing his corn that kept",
    "horse and the hound and the horn that belonged to",
  ]

class RhymePart
  attr_accessor :phrase
  def initialize(phrase)
    self.phrase = phrase
  end

  def to_s
    "the #{phrase}"
  end
end

class RhymeLine
  attr_accessor :verse_number, :phrases

  def initialize(verse_number, phrases)
    self.verse_number = verse_number
    self.phrases = phrases
  end

  def to_s
    "#{preamble}#{parts}.#{pause}"
  end

  def preamble
    "This is"
  end

  def pause
    "\n\n"
  end

  def parts
    (0..verse_number).inject("") {|ret, i|  " " + RhymePart.new(phrases[i]).to_s + ret}
  end
end

class Rhyme
  attr_accessor :phrases
  def initialize(phrases=PHRASES)
    self.phrases = phrases
  end

  def say
    phrases.each_index {|i| print RhymeLine.new(i,phrases)}
    nil
  end
end

print Rhyme.new.say
